// <auto-generated />
using System;
using AliUni.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AliUni.Data.Migrations
{
    [DbContext(typeof(AliUniContext))]
    [Migration("20240706181955_Mig-000")]
    partial class Mig000
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AliUni.Data.Entities.Users.Connections.RolePermisionconnection", b =>
                {
                    b.Property<int>("RPCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RPCId"));

                    b.Property<int>("PermisionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RPCId");

                    b.HasIndex("PermisionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermisionconnections");
                });

            modelBuilder.Entity("AliUni.Data.Entities.Users.Permision", b =>
                {
                    b.Property<int>("PermisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisionId"));

                    b.Property<string>("PermisionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermisionId");

                    b.ToTable("Permisions");
                });

            modelBuilder.Entity("AliUni.Data.Entities.Users.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AliUni.Data.Entities.Users.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ActivationCodeForEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivationCodeForPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUserActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegiterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserAvatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFNameLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AliUni.Data.Entities.Users.Connections.RolePermisionconnection", b =>
                {
                    b.HasOne("AliUni.Data.Entities.Users.Permision", "Permision")
                        .WithMany("RolePermisionconnections")
                        .HasForeignKey("PermisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AliUni.Data.Entities.Users.Role", "Role")
                        .WithMany("RolePermisionconnections")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permision");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AliUni.Data.Entities.Users.User", b =>
                {
                    b.HasOne("AliUni.Data.Entities.Users.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AliUni.Data.Entities.Users.Permision", b =>
                {
                    b.Navigation("RolePermisionconnections");
                });

            modelBuilder.Entity("AliUni.Data.Entities.Users.Role", b =>
                {
                    b.Navigation("RolePermisionconnections");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
